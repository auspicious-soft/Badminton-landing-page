import { useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import { Menu, X, Download } from "lucide-react";

const Header = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [showNotificationModal, setShowNotificationModal] = useState(false);

  const location = useLocation();
  const navigate = useNavigate();

  const navLinks = [
    { name: "Features", href: "#features" },
    { name: "How it Works", href: "#how-it-works" },
    { name: "Testimonials", href: "#testimonials" },
    { name: "FAQ", href: "#faq" },
  ];

  // Helper for nav link click
  const handleNavClick = (e: React.MouseEvent<HTMLAnchorElement>, href: string) => {
    if (location.pathname !== "/") {
      e.preventDefault();
      navigate("/" + href);
    }
    // else default anchor scroll
  };

  useEffect(() => {
  const anyModalOpen = isMenuOpen || showNotificationModal; // add more modals if needed

  if (anyModalOpen) {
    document.body.classList.add("body-no-scroll");
  } else {
    document.body.classList.remove("body-no-scroll");
  }

  // Cleanup on unmount
  return () => {
    document.body.classList.remove("body-no-scroll");
  };
}, [isMenuOpen, showNotificationModal]);

  return (
    <header className="fixed top-0 left-0 right-0 bg-white/95 backdrop-blur-sm border-b border-gray-100 z-50">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          {/* Logo */}
          <svg width="130" height="70" viewBox="0 0 173 90" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_d_5223_1406)">
<rect x="20" y="16" width="133.007" height="58" rx="29" fill="#0E2642" />
<rect x="20.5" y="16.5" width="132.007" height="57" rx="28.5" stroke="#10375C" />
<path d="M79.3388 54.911C79.3388 55.4563 79.1628 55.9499 78.8089 56.3918C78.4569 56.8337 77.9843 57.1322 77.3951 57.2891C77.1406 57.356 76.8632 57.4058 76.5648 57.4345C76.2644 57.4651 75.9296 57.4785 75.5604 57.4785L75.5718 59.8489H74.6478C74.6516 59.625 74.6574 59.2099 74.665 58.6015C74.6727 57.995 74.6765 57.0557 74.6765 55.7853C74.6765 55.3817 74.6765 54.8862 74.6707 54.3007C74.665 53.7153 74.6593 53.061 74.6478 52.3436C74.8085 52.3398 74.9654 52.3379 75.1203 52.3379H75.4991C76.1458 52.3379 76.6949 52.378 77.1483 52.4603C77.6017 52.5426 77.9843 52.6822 78.2923 52.8812C78.6329 53.0936 78.8911 53.371 79.071 53.7134C79.2508 54.0559 79.3407 54.4538 79.3407 54.911H79.3388ZM78.3861 54.911C78.3861 54.5265 78.2981 54.1974 78.1221 53.9277C77.9461 53.656 77.6763 53.4437 77.3147 53.2868C77.0909 53.1892 76.8479 53.128 76.5858 53.105C76.3237 53.0802 76.0559 53.0687 75.7785 53.0687H75.5718C75.5718 53.1089 75.568 53.3901 75.5604 53.9086C75.5527 54.4289 75.5489 54.8383 75.5489 55.1425C75.5489 55.4199 75.5489 55.7471 75.5508 56.124C75.5508 56.5009 75.5527 56.717 75.5527 56.7687H75.7765C76.0272 56.7687 76.2931 56.7515 76.5762 56.719C76.8575 56.6845 77.1004 56.6233 77.3013 56.5334C77.6533 56.3842 77.9212 56.1756 78.1068 55.9116C78.2923 55.6476 78.3842 55.3147 78.3842 54.913L78.3861 54.911Z" fill="white"/>
<path d="M86.5342 59.8374C86.4902 59.8374 86.2529 59.8374 85.8244 59.8316C85.3958 59.8278 84.8506 59.8259 84.1848 59.8259C83.7467 59.8259 83.3316 59.8259 82.9374 59.8316C82.5433 59.8355 82.2104 59.8374 81.9369 59.8374C81.9445 59.1946 81.9503 58.5441 81.956 57.8841C81.9617 57.224 81.9637 56.5774 81.9637 55.9422C81.9637 54.8804 81.9598 54.0712 81.9522 53.5144C81.9445 52.9577 81.9388 52.5674 81.935 52.3436H82.859C82.8514 52.8257 82.8456 53.3824 82.8418 54.0119C82.838 54.6432 82.836 55.1597 82.836 55.5634C82.836 56.5449 82.836 57.3656 82.8418 58.0218C82.8456 58.6799 82.8475 59.0262 82.8475 59.0645C83.0006 59.0645 83.1862 59.0645 83.4023 59.0664C83.6185 59.0683 83.8156 59.0683 83.9916 59.0683C84.6612 59.0683 85.2428 59.0664 85.7383 59.0606C86.2338 59.0549 86.4978 59.053 86.5322 59.053V59.8374H86.5342Z" fill="white"/>
<path d="M95.1682 59.5485L94.2958 60C94.2805 59.9598 94.1599 59.6805 93.9361 59.164C93.7123 58.6474 93.4157 57.9855 93.0484 57.1743H89.7291C89.335 58.0448 89.0308 58.7201 88.8165 59.1984C88.6023 59.6767 88.4836 59.9445 88.4626 60L87.7127 59.5944C87.8102 59.3993 88.2101 58.5441 88.916 57.0251C89.6201 55.506 90.3528 53.9105 91.1104 52.2365H91.8393C92.5873 53.9105 93.322 55.5309 94.0432 57.0997C94.7645 58.6685 95.1395 59.4854 95.1701 59.5485H95.1682ZM92.7327 56.4569C92.5338 56.0015 92.3252 55.5232 92.1052 55.0258C91.8852 54.5284 91.6537 54.008 91.4127 53.4666L91.3897 53.4724C91.2022 53.8837 90.9746 54.3888 90.7086 54.9876C90.4427 55.5864 90.2246 56.0761 90.0505 56.4569V56.4626H92.7327V56.4569Z" fill="white"/>
<path d="M102.631 52.7071C102.601 52.7454 102.231 53.2103 101.522 54.1037C100.812 54.9971 100.24 55.7184 99.8056 56.2675C99.798 56.9447 99.7999 57.6545 99.8075 58.3968C99.8171 59.141 99.8228 59.625 99.8267 59.8489H98.9026C98.9103 59.625 98.9179 59.1333 98.9256 58.3777C98.9332 57.6201 98.9351 56.939 98.9313 56.3344C98.476 55.7337 97.9116 55.0048 97.2382 54.1515C96.5648 53.2983 96.2032 52.8391 96.1515 52.776L96.8881 52.2154C96.9359 52.2786 97.2305 52.6707 97.77 53.392C98.3096 54.1133 98.8529 54.8288 99.3981 55.5386H99.4096C99.9376 54.8613 100.491 54.1496 101.068 53.3997C101.646 52.6497 101.95 52.2556 101.981 52.2135L102.635 52.7071H102.631Z" fill="white"/>
<path d="M51.0836 30.9967C50.4255 30.331 49.6392 30 48.7266 30H42V45.1062H45.3633V38.3987H48.7266C49.6392 38.3987 50.4255 38.0658 51.0836 37.402C51.7417 36.7362 52.0708 35.948 52.0708 35.0354V33.3633C52.0708 32.4507 51.7417 31.6606 51.0836 30.9967ZM48.6864 35.3759C48.6233 35.6897 48.476 35.9709 48.233 36.2139C47.904 36.543 47.5041 36.7075 47.0354 36.7075H45.3633V35.6151C44.401 34.8498 44.4029 33.1777 45.3633 32.4106V31.6721H47.0354C47.4314 31.6721 47.7739 31.7964 48.0685 32.0279C49.4326 32.533 49.6354 34.4404 48.6864 35.374V35.3759Z" fill="white"/>
<path d="M55.4341 45.1062V30H62.1607C63.0752 30 63.8596 30.3329 64.5177 30.9967C65.1758 31.6606 65.5049 32.4507 65.5049 33.3633V34.2701C65.5049 35.022 65.2504 35.7433 64.7396 36.4358C64.2288 37.1284 63.3698 37.4727 62.1607 37.4727H63.8328C64.29 37.4727 64.6822 37.6373 65.0113 37.9663C65.3403 38.2954 65.5049 38.6952 65.5049 39.164V45.1062H62.1607V40.0708C62.1607 39.6135 61.9962 39.2214 61.6671 38.8923C61.3381 38.5632 60.9382 38.3987 60.4695 38.3987H58.7974V45.1062H55.4341ZM58.7974 36.7075H60.4695C60.9401 36.7075 61.3381 36.543 61.6671 36.2139C61.9962 35.8848 62.1607 35.4926 62.1607 35.0354V33.3633C62.1607 32.8927 61.9962 32.4947 61.6671 32.1657C61.3381 31.8366 60.9382 31.6721 60.4695 31.6721H58.7974V36.7075Z" fill="white"/>
<path d="M72.2334 30H75.5967C76.5093 30 77.2956 30.3329 77.9537 30.9967C78.6118 31.6606 78.9409 32.4507 78.9409 33.3633V41.7429C78.9409 42.6554 78.6118 43.4456 77.9537 44.1094C77.2956 44.7733 76.5093 45.1062 75.5967 45.1062H72.2334C71.3208 45.1062 70.5307 44.7771 69.8668 44.119C69.203 43.4609 68.8701 42.6688 68.8701 41.7429V33.3633C68.8701 32.4373 69.203 31.6453 69.8668 30.9872C70.5307 30.3291 71.3189 30 72.2334 30ZM72.2334 33.3633V41.7429C72.2334 42.2001 72.3979 42.5961 72.727 42.9309C73.0561 43.2676 73.4483 43.4341 73.9055 43.4341C74.3627 43.4341 74.7741 43.2657 75.1031 42.9309C75.4322 42.5961 75.5967 42.2001 75.5967 41.7429V33.3633C75.5967 32.8927 75.4322 32.4947 75.1031 32.1657C74.7741 31.8366 74.3742 31.6721 73.9055 31.6721C73.4368 31.6721 73.0561 31.8366 72.727 32.1657C72.3979 32.4947 72.2334 32.8946 72.2334 33.3633Z" fill="white"/>
<path d="M92.3845 30V41.7429C92.3845 42.8716 92.1052 43.7134 91.5485 44.2701C90.9918 44.8269 90.1481 45.1062 89.0212 45.1062H85.6771C84.5483 45.1062 83.7065 44.8269 83.1498 44.2701C82.5931 43.7134 82.3138 42.8697 82.3138 41.7429V38.3987H85.6771V41.7429C85.6771 42.2135 85.8416 42.6114 86.1707 42.9405C86.4997 43.2696 86.8919 43.4341 87.3492 43.4341C87.8064 43.4341 88.1986 43.2696 88.5276 42.9405C88.8567 42.6114 89.0212 42.2116 89.0212 41.7429V30H92.3845Z" fill="white"/>
<path d="M95.7287 45.1062V30H104.127V31.6721H99.092V36.7075H102.455V38.3987H99.092V43.4341H104.127V45.1062H95.7287Z" fill="white"/>
<path d="M117.562 41.7429C117.428 43.9851 116.312 45.1062 114.217 45.1062H110.854C109.94 45.1062 109.151 44.7771 108.487 44.119C107.822 43.4609 107.491 42.6688 107.491 41.7429V33.3633C107.491 32.4507 107.816 31.6606 108.466 30.9967C109.119 30.3329 109.915 30 110.854 30H114.217C116.326 30 117.441 31.1211 117.562 33.3633H115.889C115.756 32.2346 115.197 31.6721 114.217 31.6721H112.526C112.069 31.6721 111.677 31.8366 111.348 32.1657C111.019 32.4947 110.854 32.8946 110.854 33.3633V41.7429C110.854 42.2001 111.019 42.5961 111.348 42.9309C111.677 43.2676 112.069 43.4341 112.526 43.4341H114.217C115.21 43.4341 115.769 42.8697 115.889 41.7429H117.562Z" fill="white"/>
<path d="M124.3 45.1062V31.6721H120.936V30H131.007V31.6721H127.644V45.1062H124.3Z" fill="white"/>
<path d="M50.1921 32.2594C49.9128 31.4712 49.3082 31.0408 48.5353 30.8131C47.8447 30.6103 47.1406 30.6275 46.4366 30.6945C45.8741 30.748 45.3384 30.8954 44.8506 31.1881C44.1676 31.5975 43.8079 32.2059 43.7429 32.996C43.739 33.0342 43.7276 33.0744 43.7218 33.1127L43.7448 33.7C43.7945 33.9334 43.8347 34.1707 43.8959 34.4002C44.0222 34.8862 44.2709 35.3185 44.5139 35.7509C44.8391 36.3344 45.2409 36.8644 45.6541 37.3886C45.7038 37.4517 45.7478 37.5187 45.7976 37.5837C46.0061 37.4632 46.2357 37.3771 46.4729 37.3293C46.2912 37.1169 46.1133 36.8988 45.9411 36.6616C46.7771 36.9868 47.5959 36.9753 48.4014 36.5716C48.4109 36.5831 48.4186 36.5965 48.4282 36.608C48.2655 36.8337 48.0914 37.0538 47.9403 37.2872C47.8982 37.3522 47.86 37.4192 47.8198 37.4842C48.0302 37.5914 48.2196 37.7406 48.3784 37.9376C48.7056 37.4096 49.0365 36.8835 49.356 36.3516C49.7061 35.7681 49.9989 35.1521 50.1902 34.4978C50.4064 33.7574 50.458 33.0017 50.194 32.2575L50.1921 32.2594ZM45.2313 33.1242C45.3997 33.1184 45.5202 33.2294 45.5278 33.3977C45.5355 33.5661 45.4245 33.6885 45.2562 33.6943C45.0936 33.7 44.9654 33.5833 44.9577 33.4207C44.9501 33.2523 45.0629 33.1318 45.2313 33.1261V33.1242ZM45.2772 34.6011C45.1222 34.603 44.9998 34.4844 44.9941 34.3256C44.9883 34.1611 45.105 34.0272 45.2638 34.0214C45.4188 34.0157 45.5604 34.1439 45.5661 34.2969C45.5738 34.4538 45.4379 34.5973 45.2772 34.6011ZM46.096 32.1867C46.2701 32.1791 46.3849 32.2843 46.3907 32.4565C46.3964 32.6267 46.2874 32.7492 46.1228 32.7568C45.9583 32.7645 45.8339 32.6497 45.8263 32.4833C45.8167 32.313 45.9258 32.1944 46.096 32.1867ZM46.1515 33.0897C46.3122 33.0897 46.4251 33.2007 46.427 33.3633C46.4289 33.5221 46.3046 33.6541 46.1496 33.6598C45.9908 33.6656 45.8588 33.5317 45.8588 33.3652C45.8588 33.2045 45.9793 33.0916 46.1515 33.0916V33.0897ZM46.1687 33.9851C46.3314 33.9813 46.4595 34.1018 46.4634 34.2644C46.4672 34.4213 46.3409 34.5571 46.186 34.5628C46.0272 34.5686 45.9028 34.4481 45.8971 34.2816C45.8913 34.1133 46.0042 33.9889 46.1687 33.9851ZM46.2242 35.462C46.0616 35.4678 45.9372 35.3491 45.9334 35.1846C45.9277 35.0239 46.052 34.8881 46.2051 34.8843C46.362 34.8804 46.494 35.0086 46.4997 35.1655C46.5055 35.3262 46.3849 35.4563 46.2242 35.462ZM46.9857 32.1504C47.1521 32.1389 47.286 32.2518 47.2956 32.4106C47.3051 32.5674 47.1808 32.709 47.0277 32.7186C46.8709 32.7281 46.7331 32.6038 46.7255 32.4469C46.7159 32.29 46.8288 32.1638 46.9876 32.1523L46.9857 32.1504ZM47.0469 33.0553C47.2133 33.0553 47.3262 33.1605 47.33 33.3231C47.3338 33.4915 47.2076 33.6235 47.043 33.6235C46.8843 33.6235 46.7637 33.5011 46.7618 33.3327C46.758 33.1663 46.8689 33.0572 47.0469 33.0553ZM47.0775 33.9545C47.2382 33.9506 47.3587 34.0616 47.3664 34.2204C47.374 34.3868 47.2478 34.5246 47.0851 34.5265C46.9283 34.5284 46.8001 34.4021 46.7963 34.2414C46.7905 34.0788 46.911 33.9583 47.0775 33.9545ZM47.133 35.4295C46.9723 35.4391 46.8403 35.3185 46.8326 35.1578C46.8269 34.9971 46.9455 34.8632 47.1024 34.8536C47.2611 34.8441 47.3932 34.9665 47.4027 35.1272C47.4104 35.2898 47.2937 35.4218 47.133 35.4314V35.4295ZM47.8848 32.114C48.0513 32.1064 48.1948 32.2326 48.1986 32.3895C48.2043 32.5445 48.0761 32.6765 47.9154 32.6822C47.7509 32.688 47.6285 32.5751 47.6227 32.4067C47.617 32.2441 47.7241 32.1217 47.8829 32.114H47.8848ZM47.9307 33.017C48.0972 33.0094 48.2254 33.1223 48.233 33.283C48.2407 33.4417 48.1182 33.5776 47.9614 33.5852C47.8026 33.5929 47.6591 33.459 47.6553 33.3002C47.6514 33.1471 47.772 33.0247 47.9288 33.017H47.9307ZM47.9767 33.9162C48.1412 33.9105 48.2675 34.0291 48.2713 34.1936C48.2732 34.3562 48.1508 34.4882 47.9939 34.4921C47.837 34.4959 47.7012 34.3677 47.6954 34.2108C47.6897 34.054 47.814 33.9239 47.9767 33.9162ZM48.0302 35.374C47.8695 35.3798 47.7337 35.2573 47.7299 35.1024C47.726 34.9474 47.8523 34.8116 48.0092 34.8039C48.168 34.7963 48.3019 34.9206 48.3076 35.0775C48.3134 35.2382 48.1928 35.3664 48.0302 35.3721V35.374ZM48.8357 32.9807C48.9945 32.9749 49.1284 33.0974 49.1341 33.2562C49.1399 33.415 49.0174 33.5431 48.8548 33.5508C48.6922 33.5584 48.5621 33.4379 48.5563 33.2772C48.5525 33.1184 48.675 32.9864 48.8337 32.9807H48.8357ZM48.9122 34.4538C48.7553 34.4634 48.5984 34.3275 48.5927 34.1764C48.587 34.0291 48.7247 33.8818 48.8739 33.8741C49.0308 33.8665 49.1628 33.9908 49.1705 34.1534C49.1781 34.3103 49.0633 34.4423 48.9103 34.4538H48.9122Z" fill="white"/>
</g>
<defs>
<filter id="filter0_d_5223_1406" x="0" y="0" width="173.007" height="98" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="10"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0.3625 0 0 0 0 0.541 0 0 0 0 1 0 0 0 0.1 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_5223_1406"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_5223_1406" result="shape"/>
</filter>
</defs>
</svg>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex items-center gap-8">
            {navLinks.map((link) => (
              <a
                key={link.name}
                href={link.href}
                className="text-gray-600 hover:text-blue-600 font-medium transition-colors duration-200"
                onClick={(e) => handleNavClick(e, link.href)}
              >
                {link.name}
              </a>
            ))}
          </nav>

          {/* Desktop CTA */}
          <div className="hidden md:flex items-center gap-4">
            {/* <button className="text-gray-600 hover:text-blue-600 font-medium transition-colors duration-200">
              Sign In
            </button> */}
            <button className="bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2 rounded-lg flex items-center gap-2 transition-colors duration-200">
              <Download className="w-4 h-4" />
              Download
            </button>
          </div>

          {/* Mobile Menu Button */}
          <button
            className="md:hidden p-2"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? (
              <X className="w-6 h-6 text-gray-600" />
            ) : (
              <Menu className="w-6 h-6 text-gray-600" />
            )}
          </button>
        </div>

        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="md:hidden border-t border-gray-100 py-4">
            <nav className="flex flex-col gap-4">
              {navLinks.map((link) => (
                <a
                  key={link.name}
                  href={link.href}
                  className="text-gray-600 hover:text-blue-600 font-medium transition-colors duration-200 py-2"
                  onClick={(e) => {
                    handleNavClick(e, link.href);
                    setIsMenuOpen(false);
                  }}
                >
                  {link.name}
                </a>
              ))}
              <div className="flex flex-col gap-3 pt-4 border-t border-gray-100">
                <button className="text-gray-600 hover:text-blue-600 font-medium transition-colors duration-200 text-left">
                  Sign In
                </button>
                <button className="bg-green-500 hover:bg-green-600 text-white font-semibold px-4 py-2 rounded-lg flex items-center gap-2 transition-colors duration-200 w-fit">
                  <Download className="w-4 h-4" />
                  Download
                </button>
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
